language: go

os: linux

dist: xenial

go:
  - '1.12'

before_script:
  - sudo sysctl -w net.ipv4.ip_forward=1

services:
  - docker

addons:
  apt:
    packages:
      - curl
      - bash
      - wget

env:
  global:
    - GO111MODULE=on
    - CGO_ENABLED=0
    - GO_VERSION=1.12
    - HELM_VERSION=v3.0.2
    - GOLANG_LINT_VERSION=v1.23.7

install:
  - wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz -O /tmp/helm.tar.gz
  - tar xzf /tmp/helm.tar.gz -C /tmp --strip-components=1
  - chmod +x /tmp/helm
  - wget -O - -q https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin ${GOLANG_LINT_VERSION}

script:
  - golangci-lint run || exit 1
  - curl -sL https://git.io/goreleaser | bash -s -- --snapshot --skip-publish --rm-dist
  - /tmp/helm template ./deploy/helm-chart/servicegateway/.
  - /tmp/helm lint ./deploy/helm-chart/servicegateway/

before_deploy:
  - if [[ -n "${DOCKER_LOGIN_USERNAME}" ]] && [[ -n "${DOCKER_LOGIN_PASSWORD}" ]] && [[ -n "${DOCKER_LOGIN_URL}" ]]; then docker login -u "${DOCKER_LOGIN_USERNAME}" -p "${DOCKER_LOGIN_PASSWORD}" "${DOCKER_LOGIN_URL}"; fi
  - export FULL_IMAGE="${DOCKER_LOGIN_URL}/mittwald/servicegateway"
deploy:
  - provider: script
    cleanup: false
    script: curl -sL https://git.io/goreleaser | bash -s -- --snapshot --skip-publish --rm-dist && docker push "${FULL_IMAGE}:latest"
    on:
      tags: false
      branch: master
      condition: $TRAVIS_OS_NAME = linux
  - provider: script
    cleanup: false
    script: curl -sL https://git.io/goreleaser | bash -s -- --rm-dist
    on:
      tags: true
      condition: $TRAVIS_OS_NAME = linux